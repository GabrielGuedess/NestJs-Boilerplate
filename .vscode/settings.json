{
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll.tslint": "explicit"
  },
  "[json][jsonc][yaml]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "eslint.validate": [
    "mdx",
    "markdown",
    "javascript",
    "typescript"
  ],
  "material-icon-theme.activeIconPack": "nest",
  "search.exclude": {
    "package-lock.json": true,
    "yarn.lock": true,
    "pnpm-lock.yaml": true
  },
  "prettier.ignorePath": ".gitignore",
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "mdx.experimentalLanguageServer": true,
  "material-icon-theme.folders.associations": {
    "domain": "core",
    "application": "app",
    "infrastructure": "server",
    "entities": "class",
    "schemas": "class",
    "view-models": "review",
    "consumers": "include",
    "permissions": "secure",
    "strategies": "keys",
    "args": "custom",
    "inputs": "mock",
    "workflows": "ci",
    "ISSUE_TEMPLATE": "error",
    "http": "container",
    "modules": "components",
    "repositories": "mappings",
    "migrations": "tools",
    "dtos": "typescript",
    "useCases": "controller",
    "mappers": "meta",
    "eslint-config": "tools",
    "ui": "container",
    "MailProvider": "Mail",
    "queries": "command",
    "fragments": "mjml",
    "@shared": "shared"
  },
  "material-icon-theme.files.associations": {
    ".czrc": "commitlint",
    "prismaClient.ts": "prisma",
    "prisma.ts": "prisma",
    "stories.tsx": "storybook",
    "test.tsx": "test-jsx",
    "test.ts": "test-ts",
    "spec.tsx": "test-jsx",
    "spec.ts": "test-ts",
    "mock.ts": "log",
    "mocks.ts": "log",
    "apollo.ts": "apollo",
    "husky.sh": "husky"
  },
  "discord.enabled": true
}
