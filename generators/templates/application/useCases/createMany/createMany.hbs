import { Injectable } from '@nestjs/common';

import { {{ pascalCase name }} } from 'domain/entities/{{ camelCase name }}/{{ pascalCase name }}';
import { {{ pascalCase name }}Repository } from 'domain/repositories/{{ pascalCase name }}Repository';

import { type Create{{ pascalCase name }}UseCaseRequestDTO } from 'application/dtos/{{ camelCase name }}/Create{{ pascalCase name }}UseCaseDTO';

@Injectable()
export class CreateMany{{ pascalCasePlural name }}UseCase {
  constructor(private {{ camelCase name }}Repository: {{ pascalCase name }}Repository) {}

  async execute(request: Create{{ pascalCase name }}UseCaseRequestDTO[]): Promise<{{ pascalCase name }}[]> {
    const {{ camelCasePlural name }} = request.map(async data => {
      const create{{ pascalCase name }} = new {{ pascalCase name }}({
        {{#each fields}}
          {{#unless (or (eq this.name "created_at") (eq this.name "updated_at") (eq this.name "active"))}}
              {{snakeCase this.name}}: data.{{snakeCase this.name}},
          {{/unless}}
        {{/each}}
      });

      return create{{ pascalCase name }}
    })

    const data = await Promise.all({{ camelCasePlural name }});

    const created{{ pascalCasePlural name }} = await this.{{ camelCase name }}Repository.createMany(data);

    return created{{ pascalCasePlural name }};
  }
}
