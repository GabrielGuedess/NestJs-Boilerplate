import { Injectable } from '@nestjs/common';

import { {{ pascalCase name }} } from 'domain/entities/{{ camelCase name }}/{{ pascalCase name }}';
import { {{ pascalCase name }}Repository } from 'domain/repositories/{{ pascalCase name }}Repository';
import { RelayPagination } from 'domain/shared/dtos/RelayPagination';

import { PaginationCursor{{ pascalCasePlural name }}UseCaseRequestDTO } from 'application/dtos/{{ camelCase name }}/PaginationCursor{{ pascalCasePlural name }}UseCaseDTO';

@Injectable()
export class PaginationCursor{{ pascalCasePlural name }}UseCase {
  constructor(private readonly {{ camelCase name }}Repository: {{ pascalCase name }}Repository) {}

  async execute(
    request: PaginationCursor{{ pascalCasePlural name }}UseCaseRequestDTO,
  ): Promise<RelayPagination<{{ pascalCase name }}>> {
    const {{ camelCasePlural name }} = await this.{{ camelCase name }}Repository.paginationCursor({
      last: request.last,
      after: request.after,
      first: request.first,
      order: request.order,
      where: request.where,
      before: request.before,
    });

    return {{ camelCasePlural name }};
  }
}
