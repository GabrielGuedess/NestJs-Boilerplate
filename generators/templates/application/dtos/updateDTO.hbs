import { type Where{{ pascalCase name }}UniqueDTO } from 'domain/dtos/repositories/{{ pascalCase name }}RepositoryDTO';

{{#each fields}}
{{#if this.isEnum}}
import { type {{pascalCase this.name}}Props } from 'domain/entities/{{camelCase ../name}}/{{pascalCase ../name}}';
{{/if}}
{{/each}}

export abstract class Update{{ pascalCase name }}UseCaseRequestDTO {
  where: Where{{ pascalCase name }}UniqueDTO;
  data: {
    {{#each fields}}
      {{#unless (or (eq this.name "created_at") (eq this.name "updated_at") (eq this.name "active"))}}
        {{this.name}}?: {{#if this.isEnum}}{{pascalCase this.name}}Props{{else}}{{this.type}}{{/if}};
      {{/unless}}
    {{/each}}
  };
}
