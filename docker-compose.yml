services:
  app:
    container_name: api_nestjs_boilerplate
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    command: sh -c "npx prisma migrate dev && pnpm start:dev"
    depends_on:
      - db
    networks:
      - backend

  db:
    image: postgres:latest
    container_name: db_nestjs_boilerplate
    restart: always
    environment:
      PGPORT: ${DB_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/data/postgres
    networks:
      - backend

  redis:
    container_name: redis_nestjs_boilerplate
    image: redis:8.0-alpine
    env_file:
      - .env
    networks:
      - backend
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --loglevel warning

  nginx:
    container_name: nginx_nestjs_boilerplate
    image: nginx:1.28-alpine
    env_file:
      - .env
    depends_on:
      - app
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
    driver: local

  redis_data:
    driver: local
